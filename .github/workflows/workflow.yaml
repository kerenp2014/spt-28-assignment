name: Deployment

on:
  push:
    branches: [ "main" ]

env:            
  AWS_REGION: ap-southeast-1  

jobs:
  Terraform-CI:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      run: terraform fmt --recursive
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Validate
      run: terraform validate 

    - name: Terraform Plan
      run: terraform plan

  python-linting:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    strategy:
      matrix:
        linter: [flake8, pylint]
    steps:
      - uses: advanced-security/python-lint-code-scanning-action@v1
        with:
          linter: ${{ matrix.linter }}
  
  Deploy:
    runs-on: ubuntu-latest
    needs: [Terraform-CI, python-linting]

    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Apply
      run: terraform apply --auto-approve